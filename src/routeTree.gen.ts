/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as AboutImport } from './routes/about'
import { Route as R404Import } from './routes/404'
import { Route as IndexImport } from './routes/index'
import { Route as TutorialIndexImport } from './routes/tutorial/index'
import { Route as TestIndexImport } from './routes/test/index'
import { Route as GroupsIndexImport } from './routes/groups/index'
import { Route as CountersIndexImport } from './routes/counters/index'
import { Route as TutorialSettingsImport } from './routes/tutorial/settings'
import { Route as TutorialLayoutImport } from './routes/tutorial/layout'
import { Route as TutorialCounterImport } from './routes/tutorial/counter'
import { Route as Test2Import } from './routes/test/2'
import { Route as GroupsNewImport } from './routes/groups/new'
import { Route as GroupsIdImport } from './routes/groups/$id'
import { Route as CountersNewImport } from './routes/counters/new'
import { Route as CountersIdIndexImport } from './routes/counters/$id/index'
import { Route as CountersIdEditImport } from './routes/counters/$id/edit'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TutorialIndexRoute = TutorialIndexImport.update({
  id: '/tutorial/',
  path: '/tutorial/',
  getParentRoute: () => rootRoute,
} as any)

const TestIndexRoute = TestIndexImport.update({
  id: '/test/',
  path: '/test/',
  getParentRoute: () => rootRoute,
} as any)

const GroupsIndexRoute = GroupsIndexImport.update({
  id: '/groups/',
  path: '/groups/',
  getParentRoute: () => rootRoute,
} as any)

const CountersIndexRoute = CountersIndexImport.update({
  id: '/counters/',
  path: '/counters/',
  getParentRoute: () => rootRoute,
} as any)

const TutorialSettingsRoute = TutorialSettingsImport.update({
  id: '/tutorial/settings',
  path: '/tutorial/settings',
  getParentRoute: () => rootRoute,
} as any)

const TutorialLayoutRoute = TutorialLayoutImport.update({
  id: '/tutorial/layout',
  path: '/tutorial/layout',
  getParentRoute: () => rootRoute,
} as any)

const TutorialCounterRoute = TutorialCounterImport.update({
  id: '/tutorial/counter',
  path: '/tutorial/counter',
  getParentRoute: () => rootRoute,
} as any)

const Test2Route = Test2Import.update({
  id: '/test/2',
  path: '/test/2',
  getParentRoute: () => rootRoute,
} as any)

const GroupsNewRoute = GroupsNewImport.update({
  id: '/groups/new',
  path: '/groups/new',
  getParentRoute: () => rootRoute,
} as any)

const GroupsIdRoute = GroupsIdImport.update({
  id: '/groups/$id',
  path: '/groups/$id',
  getParentRoute: () => rootRoute,
} as any)

const CountersNewRoute = CountersNewImport.update({
  id: '/counters/new',
  path: '/counters/new',
  getParentRoute: () => rootRoute,
} as any)

const CountersIdIndexRoute = CountersIdIndexImport.update({
  id: '/counters/$id/',
  path: '/counters/$id/',
  getParentRoute: () => rootRoute,
} as any)

const CountersIdEditRoute = CountersIdEditImport.update({
  id: '/counters/$id/edit',
  path: '/counters/$id/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/counters/new': {
      id: '/counters/new'
      path: '/counters/new'
      fullPath: '/counters/new'
      preLoaderRoute: typeof CountersNewImport
      parentRoute: typeof rootRoute
    }
    '/groups/$id': {
      id: '/groups/$id'
      path: '/groups/$id'
      fullPath: '/groups/$id'
      preLoaderRoute: typeof GroupsIdImport
      parentRoute: typeof rootRoute
    }
    '/groups/new': {
      id: '/groups/new'
      path: '/groups/new'
      fullPath: '/groups/new'
      preLoaderRoute: typeof GroupsNewImport
      parentRoute: typeof rootRoute
    }
    '/test/2': {
      id: '/test/2'
      path: '/test/2'
      fullPath: '/test/2'
      preLoaderRoute: typeof Test2Import
      parentRoute: typeof rootRoute
    }
    '/tutorial/counter': {
      id: '/tutorial/counter'
      path: '/tutorial/counter'
      fullPath: '/tutorial/counter'
      preLoaderRoute: typeof TutorialCounterImport
      parentRoute: typeof rootRoute
    }
    '/tutorial/layout': {
      id: '/tutorial/layout'
      path: '/tutorial/layout'
      fullPath: '/tutorial/layout'
      preLoaderRoute: typeof TutorialLayoutImport
      parentRoute: typeof rootRoute
    }
    '/tutorial/settings': {
      id: '/tutorial/settings'
      path: '/tutorial/settings'
      fullPath: '/tutorial/settings'
      preLoaderRoute: typeof TutorialSettingsImport
      parentRoute: typeof rootRoute
    }
    '/counters/': {
      id: '/counters/'
      path: '/counters'
      fullPath: '/counters'
      preLoaderRoute: typeof CountersIndexImport
      parentRoute: typeof rootRoute
    }
    '/groups/': {
      id: '/groups/'
      path: '/groups'
      fullPath: '/groups'
      preLoaderRoute: typeof GroupsIndexImport
      parentRoute: typeof rootRoute
    }
    '/test/': {
      id: '/test/'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestIndexImport
      parentRoute: typeof rootRoute
    }
    '/tutorial/': {
      id: '/tutorial/'
      path: '/tutorial'
      fullPath: '/tutorial'
      preLoaderRoute: typeof TutorialIndexImport
      parentRoute: typeof rootRoute
    }
    '/counters/$id/edit': {
      id: '/counters/$id/edit'
      path: '/counters/$id/edit'
      fullPath: '/counters/$id/edit'
      preLoaderRoute: typeof CountersIdEditImport
      parentRoute: typeof rootRoute
    }
    '/counters/$id/': {
      id: '/counters/$id/'
      path: '/counters/$id'
      fullPath: '/counters/$id'
      preLoaderRoute: typeof CountersIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/settings': typeof SettingsRoute
  '/counters/new': typeof CountersNewRoute
  '/groups/$id': typeof GroupsIdRoute
  '/groups/new': typeof GroupsNewRoute
  '/test/2': typeof Test2Route
  '/tutorial/counter': typeof TutorialCounterRoute
  '/tutorial/layout': typeof TutorialLayoutRoute
  '/tutorial/settings': typeof TutorialSettingsRoute
  '/counters': typeof CountersIndexRoute
  '/groups': typeof GroupsIndexRoute
  '/test': typeof TestIndexRoute
  '/tutorial': typeof TutorialIndexRoute
  '/counters/$id/edit': typeof CountersIdEditRoute
  '/counters/$id': typeof CountersIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/settings': typeof SettingsRoute
  '/counters/new': typeof CountersNewRoute
  '/groups/$id': typeof GroupsIdRoute
  '/groups/new': typeof GroupsNewRoute
  '/test/2': typeof Test2Route
  '/tutorial/counter': typeof TutorialCounterRoute
  '/tutorial/layout': typeof TutorialLayoutRoute
  '/tutorial/settings': typeof TutorialSettingsRoute
  '/counters': typeof CountersIndexRoute
  '/groups': typeof GroupsIndexRoute
  '/test': typeof TestIndexRoute
  '/tutorial': typeof TutorialIndexRoute
  '/counters/$id/edit': typeof CountersIdEditRoute
  '/counters/$id': typeof CountersIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/settings': typeof SettingsRoute
  '/counters/new': typeof CountersNewRoute
  '/groups/$id': typeof GroupsIdRoute
  '/groups/new': typeof GroupsNewRoute
  '/test/2': typeof Test2Route
  '/tutorial/counter': typeof TutorialCounterRoute
  '/tutorial/layout': typeof TutorialLayoutRoute
  '/tutorial/settings': typeof TutorialSettingsRoute
  '/counters/': typeof CountersIndexRoute
  '/groups/': typeof GroupsIndexRoute
  '/test/': typeof TestIndexRoute
  '/tutorial/': typeof TutorialIndexRoute
  '/counters/$id/edit': typeof CountersIdEditRoute
  '/counters/$id/': typeof CountersIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/about'
    | '/settings'
    | '/counters/new'
    | '/groups/$id'
    | '/groups/new'
    | '/test/2'
    | '/tutorial/counter'
    | '/tutorial/layout'
    | '/tutorial/settings'
    | '/counters'
    | '/groups'
    | '/test'
    | '/tutorial'
    | '/counters/$id/edit'
    | '/counters/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | '/about'
    | '/settings'
    | '/counters/new'
    | '/groups/$id'
    | '/groups/new'
    | '/test/2'
    | '/tutorial/counter'
    | '/tutorial/layout'
    | '/tutorial/settings'
    | '/counters'
    | '/groups'
    | '/test'
    | '/tutorial'
    | '/counters/$id/edit'
    | '/counters/$id'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/about'
    | '/settings'
    | '/counters/new'
    | '/groups/$id'
    | '/groups/new'
    | '/test/2'
    | '/tutorial/counter'
    | '/tutorial/layout'
    | '/tutorial/settings'
    | '/counters/'
    | '/groups/'
    | '/test/'
    | '/tutorial/'
    | '/counters/$id/edit'
    | '/counters/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  AboutRoute: typeof AboutRoute
  SettingsRoute: typeof SettingsRoute
  CountersNewRoute: typeof CountersNewRoute
  GroupsIdRoute: typeof GroupsIdRoute
  GroupsNewRoute: typeof GroupsNewRoute
  Test2Route: typeof Test2Route
  TutorialCounterRoute: typeof TutorialCounterRoute
  TutorialLayoutRoute: typeof TutorialLayoutRoute
  TutorialSettingsRoute: typeof TutorialSettingsRoute
  CountersIndexRoute: typeof CountersIndexRoute
  GroupsIndexRoute: typeof GroupsIndexRoute
  TestIndexRoute: typeof TestIndexRoute
  TutorialIndexRoute: typeof TutorialIndexRoute
  CountersIdEditRoute: typeof CountersIdEditRoute
  CountersIdIndexRoute: typeof CountersIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  AboutRoute: AboutRoute,
  SettingsRoute: SettingsRoute,
  CountersNewRoute: CountersNewRoute,
  GroupsIdRoute: GroupsIdRoute,
  GroupsNewRoute: GroupsNewRoute,
  Test2Route: Test2Route,
  TutorialCounterRoute: TutorialCounterRoute,
  TutorialLayoutRoute: TutorialLayoutRoute,
  TutorialSettingsRoute: TutorialSettingsRoute,
  CountersIndexRoute: CountersIndexRoute,
  GroupsIndexRoute: GroupsIndexRoute,
  TestIndexRoute: TestIndexRoute,
  TutorialIndexRoute: TutorialIndexRoute,
  CountersIdEditRoute: CountersIdEditRoute,
  CountersIdIndexRoute: CountersIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/404",
        "/about",
        "/settings",
        "/counters/new",
        "/groups/$id",
        "/groups/new",
        "/test/2",
        "/tutorial/counter",
        "/tutorial/layout",
        "/tutorial/settings",
        "/counters/",
        "/groups/",
        "/test/",
        "/tutorial/",
        "/counters/$id/edit",
        "/counters/$id/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/404": {
      "filePath": "404.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/counters/new": {
      "filePath": "counters/new.tsx"
    },
    "/groups/$id": {
      "filePath": "groups/$id.tsx"
    },
    "/groups/new": {
      "filePath": "groups/new.tsx"
    },
    "/test/2": {
      "filePath": "test/2.tsx"
    },
    "/tutorial/counter": {
      "filePath": "tutorial/counter.tsx"
    },
    "/tutorial/layout": {
      "filePath": "tutorial/layout.tsx"
    },
    "/tutorial/settings": {
      "filePath": "tutorial/settings.tsx"
    },
    "/counters/": {
      "filePath": "counters/index.tsx"
    },
    "/groups/": {
      "filePath": "groups/index.tsx"
    },
    "/test/": {
      "filePath": "test/index.tsx"
    },
    "/tutorial/": {
      "filePath": "tutorial/index.tsx"
    },
    "/counters/$id/edit": {
      "filePath": "counters/$id/edit.tsx"
    },
    "/counters/$id/": {
      "filePath": "counters/$id/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
