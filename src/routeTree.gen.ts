/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as GroupViewImport } from './routes/groupView'
import { Route as AddCounterGroupImport } from './routes/addCounterGroup'
import { Route as AddCounterImport } from './routes/addCounter'
import { Route as R404Import } from './routes/404'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const GroupViewRoute = GroupViewImport.update({
  id: '/groupView',
  path: '/groupView',
  getParentRoute: () => rootRoute,
} as any)

const AddCounterGroupRoute = AddCounterGroupImport.update({
  id: '/addCounterGroup',
  path: '/addCounterGroup',
  getParentRoute: () => rootRoute,
} as any)

const AddCounterRoute = AddCounterImport.update({
  id: '/addCounter',
  path: '/addCounter',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/addCounter': {
      id: '/addCounter'
      path: '/addCounter'
      fullPath: '/addCounter'
      preLoaderRoute: typeof AddCounterImport
      parentRoute: typeof rootRoute
    }
    '/addCounterGroup': {
      id: '/addCounterGroup'
      path: '/addCounterGroup'
      fullPath: '/addCounterGroup'
      preLoaderRoute: typeof AddCounterGroupImport
      parentRoute: typeof rootRoute
    }
    '/groupView': {
      id: '/groupView'
      path: '/groupView'
      fullPath: '/groupView'
      preLoaderRoute: typeof GroupViewImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/addCounter': typeof AddCounterRoute
  '/addCounterGroup': typeof AddCounterGroupRoute
  '/groupView': typeof GroupViewRoute
  '/test': typeof TestRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/addCounter': typeof AddCounterRoute
  '/addCounterGroup': typeof AddCounterGroupRoute
  '/groupView': typeof GroupViewRoute
  '/test': typeof TestRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/addCounter': typeof AddCounterRoute
  '/addCounterGroup': typeof AddCounterGroupRoute
  '/groupView': typeof GroupViewRoute
  '/test': typeof TestRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/addCounter'
    | '/addCounterGroup'
    | '/groupView'
    | '/test'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/404' | '/addCounter' | '/addCounterGroup' | '/groupView' | '/test'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/addCounter'
    | '/addCounterGroup'
    | '/groupView'
    | '/test'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  AddCounterRoute: typeof AddCounterRoute
  AddCounterGroupRoute: typeof AddCounterGroupRoute
  GroupViewRoute: typeof GroupViewRoute
  TestRoute: typeof TestRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  AddCounterRoute: AddCounterRoute,
  AddCounterGroupRoute: AddCounterGroupRoute,
  GroupViewRoute: GroupViewRoute,
  TestRoute: TestRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/404",
        "/addCounter",
        "/addCounterGroup",
        "/groupView",
        "/test"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/404": {
      "filePath": "404.tsx"
    },
    "/addCounter": {
      "filePath": "addCounter.tsx"
    },
    "/addCounterGroup": {
      "filePath": "addCounterGroup.tsx"
    },
    "/groupView": {
      "filePath": "groupView.tsx"
    },
    "/test": {
      "filePath": "test.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
